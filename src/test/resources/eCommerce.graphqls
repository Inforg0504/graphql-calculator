type Query {
    userInfo(id: Int):User
    coupon(id: Int): Coupon
    couponList(ids: [Int]): [Coupon]
    item(id: Int): Item
    itemList(ids:[Int]): [Item]
}

#query($userId:Int){
#    userInfo(id:$userId){
#        preferredItemIdList @node(name:"ids")
#        acquiredCouponIdList @node(name:"ids")
#    }
#
#    itemList(ids: 1) @link(argument:"ids",node:"ids"){
#        name
#    }
#
#    couponList(ids: 1) @link(argument:"ids",node:"ids"){
#        price
#    }
#}


#query($userId:Int){
#    userInfo(id:$userId){
#        age
#        name
#        preferredItemIdList @node(name:"itemIds")
#        acquiredCouponIdList @node(name:"couponIds")
#    }
#
#    itemList(ids:1) @link(argument:"ids",node:"itemIds"){
#        name
#        salePrice
#        withCouponIdList
#    }
#
#    couponList(ids:1) @link(argument:"ids",node:"couponIds"){
#        id
#        price
#        changedPrice: price @map(mapper: "price +1")
#    }
#}


# fixme 通过node-path取值
#query($itemIdList:[Int]){
#    itemList(ids:$itemIdList) @node(name:"couponIds",path:"withCouponIdList"){
#        withCouponIdList
#    }
#
#    couponList(ids:1) @link(argument:"ids",node:"couponIds"){
#        id
#        price
#    }
#}


#query($itemId:Int) {
#    item(id: $itemId){
#        id
#        name
#        priceText: name @map(mapper:"'售价'+str(salePrice/100)+'元'")
#    }
#}


type User{
    id: Int
    age: Int
    name: String
    email: String
    preferredItemIdList: [Int]
    acquiredCouponIdList: [Int]
}

type Item{
    id: Int
    name: String
    salePrice: Int
    withCouponIdList: [Int]
    skuList: [Sku]
}

type Coupon{
    id: Int
    price: Int
    limitation: Int
    couponText: String
}

type Sku{
    id: Int
    itemId:Int
    color: String
    size: Int
}