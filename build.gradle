plugins {
    id 'java'
    id 'java-library'
    id 'maven'
    id 'maven-publish'
}

group = 'com.graphql-java-calculator'
version = '0.2-SNAPSHOT'

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    compile group: 'com.graphql-java', name: 'graphql-java', version: '16.1'
    compile group: 'com.googlecode.aviator', name: 'aviator', version: '5.1.4'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

java {
    withJavadocJar()
    withSourcesJar()
}

javadoc {
    options.encoding = 'UTF-8'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'graphql-java-calculator'
            from components.java

            pom {
                name = 'graphql-java-calculator'
                description = 'graphql-java-calculator'
                url = 'https://github.com/dugenkui03/graphql-java-calculator'

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'dugenkui'
                        name = 'dugenkui'
                        email = 'dugk@foxmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/dugenkui03/graphql-java-calculator.git'
                    developerConnection = 'scm:git:https://github.com/dugenkui03/graphql-java-calculator.git'
                    url = 'https://github.com/dugenkui03/graphql-java-calculator'
                }
            }
        }
    }

    repositories {
        maven {
            name = "OSSRH"
            def snapshotUrl = "https://oss.sonatype.org/content/repositories/snapshots"
            def releaseUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            url = version.endsWith('SNAPSHOT') ? snapshotUrl : releaseUrl
            credentials {
                username = System.getenv("MAVEN_USERNAME")
                password = System.getenv("MAVEN_PASSWORD")
            }
        }
    }
}

if (project.hasProperty("signing.keyId")) {
    apply plugin: 'signing'
    signing {
        sign configurations.archives
    }
}